{
  "actor": {
    "avatar_url": "https://avatars.githubusercontent.com/u/4379889?",
    "display_login": "msterin",
    "gravatar_id": "",
    "id": 4379889.0,
    "login": "msterin",
    "url": "https://api.github.com/users/msterin"
  },
  "created_at": "2016-06-02T17:59:58Z",
  "id": "4095565488",
  "org": {
    "avatar_url": "https://avatars.githubusercontent.com/u/473334?",
    "gravatar_id": "",
    "id": 473334,
    "login": "vmware",
    "url": "https://api.github.com/orgs/vmware"
  },
  "payload": {
    "action": "created",
    "comment": {
      "body": "@andrewstone - I agree, and you said what I thought, only eloquently :-). We dhould strive to use exceptions and catch it up the call stack, when a decision needs to be made IMO , for reasons you have mentioned \r\n\r\nWhat concerns me is that we do heavy mix-n-match and this PR brings more exception handlers down and up the stack. \r\n\r\nStill, my main objection is that alignment calc seems to be broken , plus I do not think we need it today, and even if we let it I it should have unit tests",
      "created_at": "2016-06-02T17:59:58Z",
      "html_url": "https://github.com/vmware/docker-volume-vsphere/pull/433#issuecomment-223371746",
      "id": 223371746.0,
      "issue_url": "https://api.github.com/repos/vmware/docker-volume-vsphere/issues/433",
      "updated_at": "2016-06-02T17:59:58Z",
      "url": "https://api.github.com/repos/vmware/docker-volume-vsphere/issues/comments/223371746",
      "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/4379889?v=3",
        "events_url": "https://api.github.com/users/msterin/events{/privacy}",
        "followers_url": "https://api.github.com/users/msterin/followers",
        "following_url": "https://api.github.com/users/msterin/following{/other_user}",
        "gists_url": "https://api.github.com/users/msterin/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/msterin",
        "id": 4379889.0,
        "login": "msterin",
        "organizations_url": "https://api.github.com/users/msterin/orgs",
        "received_events_url": "https://api.github.com/users/msterin/received_events",
        "repos_url": "https://api.github.com/users/msterin/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/msterin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/msterin/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/msterin"
      }
    },
    "issue": {
      "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/15854712?v=3",
        "events_url": "https://api.github.com/users/govint/events{/privacy}",
        "followers_url": "https://api.github.com/users/govint/followers",
        "following_url": "https://api.github.com/users/govint/following{/other_user}",
        "gists_url": "https://api.github.com/users/govint/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/govint",
        "id": 15854712.0,
        "login": "govint",
        "organizations_url": "https://api.github.com/users/govint/orgs",
        "received_events_url": "https://api.github.com/users/govint/received_events",
        "repos_url": "https://api.github.com/users/govint/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/govint/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/govint/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/govint"
      },
      "body": "1. kvESX.py - aligns the kv side car, padding to the next 4K boundary. This isn't an issue at present with  independent disks, And SVM and clone works fine as is. But dependent disks will fail and hence this related issue is being fixed for beta.\r\n2. vmdk_ops.,py - findVmByName() was recently changed to throw any exceptions returned by FindChild() but the callers attachVMDK and detachVMDK don't handle any exceptions. Added a try-except and returning error message instead.\r\n3. vmdk_ops.py - disk_detach() was handle GenericVMConfig exception while a VMReconfig_Task() can throw a bunch of exceptions include InvalidState (if the VM state prevents a reconfig). All these exceptions derive from VimFault which is what should be handled (like done in disk_attach()).",
      "closed_at": null,
      "comments": 3,
      "comments_url": "https://api.github.com/repos/vmware/docker-volume-vsphere/issues/433/comments",
      "created_at": "2016-06-01T07:41:03Z",
      "events_url": "https://api.github.com/repos/vmware/docker-volume-vsphere/issues/433/events",
      "html_url": "https://github.com/vmware/docker-volume-vsphere/pull/433",
      "id": 157842593.0,
      "labels": [
        {
          "color": "159818",
          "name": "cla-not-required",
          "url": "https://api.github.com/repos/vmware/docker-volume-vsphere/labels/cla-not-required"
        }
      ],
      "labels_url": "https://api.github.com/repos/vmware/docker-volume-vsphere/issues/433/labels{/name}",
      "locked": false,
      "milestone": null,
      "number": 433,
      "pull_request": {
        "diff_url": "https://github.com/vmware/docker-volume-vsphere/pull/433.diff",
        "html_url": "https://github.com/vmware/docker-volume-vsphere/pull/433",
        "patch_url": "https://github.com/vmware/docker-volume-vsphere/pull/433.patch",
        "url": "https://api.github.com/repos/vmware/docker-volume-vsphere/pulls/433"
      },
      "repository_url": "https://api.github.com/repos/vmware/docker-volume-vsphere",
      "state": "open",
      "title": "Align kv files to 4k boundary and misc fixes.",
      "updated_at": "2016-06-02T17:59:58Z",
      "url": "https://api.github.com/repos/vmware/docker-volume-vsphere/issues/433",
      "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/15854712?v=3",
        "events_url": "https://api.github.com/users/govint/events{/privacy}",
        "followers_url": "https://api.github.com/users/govint/followers",
        "following_url": "https://api.github.com/users/govint/following{/other_user}",
        "gists_url": "https://api.github.com/users/govint/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/govint",
        "id": 15854712.0,
        "login": "govint",
        "organizations_url": "https://api.github.com/users/govint/orgs",
        "received_events_url": "https://api.github.com/users/govint/received_events",
        "repos_url": "https://api.github.com/users/govint/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/govint/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/govint/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/govint"
      }
    }
  },
  "public": true,
  "repo": {
    "id": 49599693.0,
    "name": "vmware/docker-volume-vsphere",
    "url": "https://api.github.com/repos/vmware/docker-volume-vsphere"
  },
  "type": "IssueCommentEvent",
  "a_structure": "{avatar_url:,events_url:,followers_url:,following_url:,gists_url:,gravatar_id:,html_url:,id:,login:,organizations_url:,received_events_url:,repos_url:,site_admin:,starred_url:,subscriptions_url:,type:,url:}"
}