# Some common configurations.
name: devstats
nameOverride: devstats
domainName: 'devstats-dev.tidb.io'
fullnameOverride: devstats
imagePullPolicy: Always
oauthSecret: github-oauth
secretType: Opaque
skipTemp: 1
volumeMountName: data
volumeMountPath: '/root'
volumeName: data

# Company configurations.
affiliations: 'github_users.json'
companyAcq: "companies.yaml"

# Bootstrap configurations.
bootstrapCommand: './devel/deploy_all.sh'
bootstrapLDrop: ''
bootstrapNoCreate: ''
bootstrapPodName: devstats-provision-bootstrap
bootstrapRestartPolicy: Never
bootstrapUDrop: ''
requestsBootstrapCPU: '200m'
requestsBootstrapMemory: '256Mi'
limitsBootstrapCPU: '2000m'
limitsBootstrapMemory: '2Gi'
useBootstrapResourcesLimits: 1
waitForPostgres: 15

# Grafana configurations.
grafanaCommand: 'grafana_start.sh'
grafanaImage: 'miniantdev/devstats-grafana-dev:0.2.8.beta.4'
grafanaMaxSurge: 1
grafanaMaxUnavailable: 1
grafanaNReplicas: 1
grafanaPodName: devstats-grafana
grafanaPort: 3000
grafanaRestartPolicy: Always
grafanaSecret: grafana-secret
indexGrafanasFrom: 0
indexGrafanasTo: 100
requestsGrafanasCPU: '300m'
requestsGrafanasMemory: '512Mi'
limitsGrafanasCPU: '2000m'
limitsGrafanasMemory: '8Gi'
useGrafanasResourcesLimits: 1

# Provision configurations.
provisionImage: 'miniantdev/devstats-dev:0.2.8.beta.4'
projectsFile: 'projects.yaml'
provisionCommand: './devel/deploy_all.sh'
provisionPodName: devstats-provision
provisionRestartPolicy: Never
useFlags: ''
indexProvisionsFrom: 0
indexProvisionsTo: 100
requestsProvisionsCPU: '2000m'
requestsProvisionsMemory: '16Gi'
limitsProvisionsCPU: '4000m'
limitsProvisionsMemory: '32Gi'
useProvisionsResourcesLimits: 1
waitForBootstrap: 60

# Postgres configurations.
postgresPort: 5432
postgresSvcName: 'devstats-postgres'
postgresImageName: 'lukaszgryglicki/devstats-patroni'
postgresStorageSize: '50Gi'
postgresNodes: 3
pgSecret: pg-db
limitsPostgresCPU: '8000m'
limitsPostgresMemory: '16Gi'
requestsPostgresCPU: '2000m'
requestsPostgresMemory: '4Gi'
usePostgresResourcesLimits: 1

# Cron sync jobs configurations.
syncCommand: devstats
syncImage: 'miniantdev/devstats-minimal-dev:0.2.8.beta.4'
syncPodName: devstats
syncRestartPolicy: Never
concurrencyPolicy: Forbid
indexCronsFrom: 0
indexCronsTo: 100
limitsCronsCPU: '6000m'
limitsCronsMemory: '16Gi'
requestsCronsCPU: '1000m'
requestsCronsMemory: '2Gi'
useCronsResourcesLimits: 1

# Execute Pod configurations.
executeImage: 'miniantdev/devstats-minimal-dev:0.2.8.beta.4'
executePodName: 'devstats-execute'
executeTargetProject: 'pingcap'
executeCommand: 'sleep'
executeCommandArgs:
- "60"
# example:
# executeCommand: devstats
# executeResetTSDB: '1'
# executeOnlyMetrics: 'pr_opened_to_merged_company,pr_time_metric_company,pr_first_non_author_activity_company,pr_age_company'
executeSkipMetrics: ''
executeRestartPolicy: Never
limitsExecuteCPU: '6000m'
limitsExecuteMemory: '32Gi'
requestsExecuteCPU: '1000m'
requestsExecuteMemory: '1Gi'
useExecuteResourcesLimits: 1

# Ingresses indexes.
indexIngressesFrom: 0
indexIngressesTo: 100

# Services configurations.
servicePodName: devstats-service
indexServicesFrom: 0
indexServicesTo: 100

# PVs configurations.
pvName: devstats-pvc
indexPVsFrom: 0
indexPVsTo: 100

# Storage configurations.
storageAccessModes: ReadWriteOnce
storageClass: gp2

projects:
  - proj: pingcap
    db: pingcap
    icon: 'pingcap'
    org: 'PingCAP'
    repo: 'pingcap/tidb'
    cron: '05 * * * *'
    disk: 50Gi
    i: 0
  - proj: tikv
    db: tikv
    icon: 'tikv'
    org: 'TiKV'
    repo: 'tikv/tikv'
    cron: '30 * * * *'
    disk: 50Gi
    i: 1
  - proj: chaosmesh
    db: chaosmesh
    icon: 'chaosmesh'
    org: 'ChaosMesh'
    repo: 'chaos-mesh/chaos-mesh'
    cron: '50 * * * *'
    disk: 50Gi
    i: 2
