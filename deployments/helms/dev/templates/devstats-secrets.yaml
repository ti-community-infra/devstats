{{- $skipSecrets := .Values.skipSecrets -}}
{{ if not $skipSecrets }}
{{- $skipPGSecret := .Values.skipPGSecret -}}
{{ if not $skipPGSecret }}
# PG secret starts
{{- $pgAdminUser := or .Values.pgAdminUser (.Files.Get "secrets/PG_ADMIN_USER.secret") -}}
{{- $pgHost := or .Values.pgHost (.Files.Get "secrets/PG_HOST.secret") -}}
{{- $pgHostRO := or .Values.pgHostRO (.Files.Get "secrets/PG_HOST_RO.secret") -}}
{{- $pgPort := or .Values.pgPort (.Files.Get "secrets/PG_PORT.secret") -}}
{{- $pgPass := or .Values.pgPass (.Files.Get "secrets/PG_PASS.secret") -}}
{{- $pgPassRO := or .Values.pgPassRO (.Files.Get "secrets/PG_PASS_RO.secret") -}}
{{- $pgPassTeam := or .Values.pgPassTeam (.Files.Get "secrets/PG_PASS_TEAM.secret") -}}
{{ if and $pgAdminUser $pgHost $pgHostRO $pgPass $pgPassRO $pgPassTeam }}
---
apiVersion: v1
data:
  PG_ADMIN_USER.secret: {{ trim $pgAdminUser | b64enc }}
  PG_HOST.secret: {{ trim $pgHost | b64enc }}
  PG_HOST_RO.secret: {{ trim $pgHostRO | b64enc }}
  PG_PORT.secret: {{ trim $pgPort | b64enc }}
  PG_PASS.secret: {{ trim $pgPass | b64enc }}
  PG_PASS_RO.secret: {{trim $pgPassRO | b64enc }}
  PG_PASS_TEAM.secret: {{ trim $pgPassTeam | b64enc }}
kind: Secret
metadata:
  name: {{ .Values.pgSecret }}
  labels:
    name: devstats
    type: 'secret'
type: {{ .Values.secretType }}
{{ else }}
missing_one_or_more_pg_secrets: "Please take a look at the NOTES.txt file"
{{ end }}
# PG secret ends
{{ end }}
{{- $skipGitHubSecret := .Values.skipGitHubSecret -}}
{{ if not $skipGitHubSecret }}
# GitHub secret starts
{{- $token := or .Values.githubOAuth (.Files.Get "secrets/GHA2DB_GITHUB_OAUTH.secret") -}}
{{ if $token }}
---
apiVersion: v1
data:
  GHA2DB_GITHUB_OAUTH.secret: {{ trim $token | b64enc }}
kind: Secret
metadata:
  name: {{ .Values.oauthSecret }}
  labels:
    name: devstats
    type: 'secret'
type: {{ .Values.secretType }}
{{ else }}
missing_github_oauth_secret: "Please take a look at the NOTES.txt file"
{{ end }}
# GitHub secret ends
{{ end }}


{{- $skipGrafanaSecret := .Values.skipGrafanaSecret -}}
{{ if not $skipGrafanaSecret }}
# Grafana secret starts
{{- $grafanaUser := or .Values.grafanaUser (.Files.Get "secrets/GF_SECURITY_ADMIN_USER.secret") -}}
{{- $grafanaPassword := or .Values.grafanaPassword (.Files.Get "secrets/GF_SECURITY_ADMIN_PASSWORD.secret") -}}
{{- $grafanaGoogleClientId := or .Values.grafanaGoogleClientId (.Files.Get "secrets/GF_GOOGLE_CLIENT_ID.secret") -}}
{{- $grafanaGoogleClientSecret := or .Values.grafanaGoogleClientSecret (.Files.Get "secrets/GF_GOOGLE_CLIENT_SECRET.secret") -}}
{{- $grafanaGoogleAllowedDomains := or .Values.grafanaGoogleAllowedDomains (.Files.Get "secrets/GF_GOOGLE_ALLOWED_DOMAINS.secret") -}}
{{ if and $grafanaUser $grafanaPassword }}
---
apiVersion: v1
data:
  GF_SECURITY_ADMIN_USER.secret: {{ trim $grafanaUser | b64enc }}
  GF_SECURITY_ADMIN_PASSWORD.secret: {{ trim $grafanaPassword | b64enc }}
  GF_GOOGLE_CLIENT_ID.secret: {{ trim $grafanaGoogleClientId | b64enc }}
  GF_GOOGLE_CLIENT_SECRET.secret: {{ trim $grafanaGoogleClientSecret | b64enc }}
  GF_GOOGLE_ALLOWED_DOMAINS.secret: {{ trim $grafanaGoogleAllowedDomains | b64enc }}
kind: Secret
metadata:
  name: {{ .Values.grafanaSecret }}
  labels:
    name: devstats
    type: 'secret'
type: {{ .Values.secretType }}
{{ else }}
missing_one_or_more_grafana_secrets: "Please take a look at the NOTES.txt file"
{{ end }}
# Grafana secret ends
{{ end }}
{{ end }}

# Identifier Database
{{- $skipIdentifierSecret := .Values.skipIdentifierSecret -}}
{{ if not $skipIdentifierSecret }}
# Identifier secret starts
{{- $identifierDBHost := or .Values.identifierDBHost (.Files.Get "secrets/ID_DB_HOST.secret") -}}
{{- $identifierDBPort := or .Values.identifierDBPort (.Files.Get "secrets/ID_DB_PORT.secret") -}}
{{- $identifierDBUser := or .Values.identifierDBUser (.Files.Get "secrets/ID_DB_USER.secret") -}}
{{- $identifierDBPass := or .Values.identifierDBPass (.Files.Get "secrets/ID_DB_PASS.secret") -}}
{{ if and $identifierDBHost $identifierDBPort $identifierDBUser $identifierDBPass }}
---
apiVersion: v1
data:
  ID_DB_HOST.secret: {{ trim $identifierDBHost | b64enc }}
  ID_DB_PORT.secret: {{ trim $identifierDBPort | b64enc }}
  ID_DB_USER.secret: {{ trim $identifierDBUser | b64enc }}
  ID_DB_PASS.secret: {{ trim $identifierDBPass | b64enc }}
kind: Secret
metadata:
  name: {{ .Values.identifierSecret }}
  labels:
    name: devstats
    type: 'secret'
type: {{ .Values.secretType }}
  {{ else }}
missing_identifier_secrets: "Please take a look at the NOTES.txt file"
{{ end }}
# Identifier secret ends
{{ end }}

# Lark
{{- $skipLarkSecret := .Values.skipLarkSecret -}}
{{ if not $skipLarkSecret  }}
# Lark secret starts
{{- $larkAppId := or .Values.larkAppId (.Files.Get "secrets/LARK_APP_ID.secret") -}}
{{- $larkAppSecret := or .Values.larkAppSecret (.Files.Get "secrets/LARK_APP_SECRET.secret") -}}
{{ if and $larkAppId $larkAppSecret }}
---
apiVersion: v1
data:
  LARK_APP_ID.secret: {{ trim $larkAppId | b64enc }}
  LARK_APP_SECRET.secret: {{ trim $larkAppSecret | b64enc }}
kind: Secret
metadata:
  name: {{ .Values.larkSecret }}
  labels:
    name: devstats
    type: 'secret'
type: {{ .Values.secretType }}
  {{ else }}
missing_lark_secrets: "Please take a look at the NOTES.txt file"
{{ end }}
# Lark secret ends
{{ end }}

# Google Map
{{- $skipGoogleMapSecret := .Values.skipGoogleMapSecret -}}
{{ if not $skipGoogleMapSecret }}
# Google Map secret starts
{{- $googleMapAPIKey := or .Values.googleMapAPIKey (.Files.Get "secrets/GOOGLE_MAP_API_KEY.secret") -}}
{{ if and $googleMapAPIKey }}
---
apiVersion: v1
data:
  GOOGLE_MAP_API_KEY.secret: {{ trim $googleMapAPIKey | b64enc }}
kind: Secret
metadata:
  name: {{ .Values.googleMapSecret }}
  labels:
    name: devstats
    type: 'secret'
type: {{ .Values.secretType }}
  {{ else }}
missing_google_map_secrets: "Please take a look at the NOTES.txt file"
{{ end }}
# Google Map secret ends
{{ end }}

# AWS
{{- $skipAWSSecret := .Values.skipAWSSecret -}}
{{ if not $skipAWSSecret }}
# AWS secret starts
{{- $awsAccessKeyID := or .Values.awsAccessKeyID (.Files.Get "secrets/AWS_ACCESS_KEY_ID.secret") -}}
{{- $awsSecretAccessKey := or .Values.awsSecretAccessKey (.Files.Get "secrets/AWS_SECRET_ACCESS_KEY.secret") -}}
{{- $awsDefaultRegion := or .Values.awsDefaultRegion (.Files.Get "secrets/AWS_DEFAULT_REGION.secret") -}}
{{- $s3GitHubUsersJSONBucket := or .Values.s3GitHubUsersJSONBucket (.Files.Get "secrets/S3_GITHUB_USERS_JSON_BUCKET.secret") -}}
{{- $s3GitHubUsersJSONBucketKey := or .Values.s3GitHubUsersJSONBucketKey (.Files.Get "secrets/S3_GITHUB_USERS_JSON_BUCKET_KEY.secret") -}}
{{ if and $awsAccessKeyID $awsSecretAccessKey $awsDefaultRegion $s3GitHubUsersJSONBucket $s3GitHubUsersJSONBucketKey }}
---
apiVersion: v1
data:
  AWS_ACCESS_KEY_ID.secret: {{ trim $awsAccessKeyID | b64enc }}
  AWS_SECRET_ACCESS_KEY.secret: {{ trim $awsSecretAccessKey | b64enc }}
  AWS_DEFAULT_REGION.secret: {{ trim $awsDefaultRegion | b64enc }}
  S3_GITHUB_USERS_JSON_BUCKET.secret: {{ trim $s3GitHubUsersJSONBucket | b64enc }}
  S3_GITHUB_USERS_JSON_BUCKET_KEY.secret: {{ trim $s3GitHubUsersJSONBucketKey | b64enc }}
kind: Secret
metadata:
  name: {{ .Values.awsSecret }}
  labels:
    name: devstats
    type: 'secret'
type: {{ .Values.secretType }}
  {{ else }}
missing_aws_secrets: "Please take a look at the NOTES.txt file"
{{ end }}
# AWS secret ends
{{ end }}